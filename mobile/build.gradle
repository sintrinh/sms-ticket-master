/*
 * Copyright 2015 AVAST Software s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'android-command'

final boolean enableCrashlytics = isFabricConfigPresent()

android {
    compileSdkVersion 22
    buildToolsVersion '27.0.3'

    defaultConfig {
        applicationId "eu.inmite.apps.smsjizdenka"
        minSdkVersion Integer.parseInt(project.MIN_SDK)
        targetSdkVersion Integer.parseInt(project.TARGET_SDK)
        versionCode evalVersionCode() + Integer.parseInt(project.INITIAL_VERSION_CODE)
        versionName evalVersionName()

        if (!isIDEBuild()) {
            println "Command-line build"
            // We can't rename build during IDE build because AS can't handle situation
            // if name is changed without Sync project with gradle files.
            applicationVariants.all { variant ->
                renameApk(variant)
            }
        }

        applicationVariants.all { variant ->
            variant.buildConfigField "String", "COMMIT_HASH", '"' + getGitHash() + '"'
            variant.buildConfigField "boolean", "IDE_BUILD", isIDEBuild() ? "true" : "false"
            variant.buildConfigField "boolean", "SNAPSHOT_BUILD", isSnapshotBuild() ? "true" : "false"
        }

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        abortOnError true
        disable 'InvalidPackage', 'MissingTranslation'
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        // ButterKnife
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    signingConfigs {
        release {
            storeFile file(AVAST_LABS_KEYSTORE_FILE)
            storePassword AVAST_LABS_KEYSTORE_PASSWORD
            keyAlias AVAST_LABS_KEY_ALIAS
            keyPassword AVAST_LABS_KEY_PASSWORD
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            ext.enableCrashlytics = enableCrashlytics
        }
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            ext.enableCrashlytics = enableCrashlytics
        }
    }

}

dependencies {
    wearApp project(':wear')
    implementation 'com.android.support:appcompat-v7:22.2.1'
    implementation 'com.google.android.gms:play-services-wearable:7.8.0'
    implementation ('com.avast:android-styled-dialogs:2.3.3') {
        exclude group: 'com.android.support'
    }
    implementation 'com.nineoldandroids:library:2.4.0'
    implementation 'Teleport:teleportlib:0.1.4'

    testImplementation 'org.json:json:20151123'
    testImplementation 'junit:junit:4.12'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.5.6'

}

// hack to access assets in tests
// TODO: update to latest Roboelectric which should allow this
task copyAssetsToClasses(type: Copy) {
    from "${projectDir}/src/main/assets"
    into "${buildDir}/intermediates/classes/test/debug/assets"
}

afterEvaluate {
    tasks.findByName("assembleDebug").dependsOn(copyAssetsToClasses)
}

boolean isFabricConfigPresent() {
    File fabricPropertiesFile = new File("${projectDir}/fabric.properties")
    boolean present = fabricPropertiesFile.exists()
    if (present) {
        logger.info("Fabric config file present, enabling Fabric.")
    } else {
        logger.info("Fabric config file missing, disabling Fabric.")
    }
    return present
}